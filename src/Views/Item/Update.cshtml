@using iBudget.Framework
@model ItemModel

@{
    ViewData["Title"] = "Atualizar - " + Model.ItemName;
}

@section Scripts
{
    <script src="@Url.Content("~/js/uploadImageUtils.js")"></script>
    <script src="@Url.Content("~/js/submitHelper.js")"></script>
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8 text-center">
            <h4 class="mb-3">Detalhes do item</h4>
            @using (Html.BeginForm("Update", "Item", FormMethod.Post, new { @class = "needs-validation", enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(m => m.ItemId)

                <partial name="Partials/_EditItem"/>

                <div class="mb-3 text-start">
                    @Html.LabelFor(model => model.DefaultImage, new { @class = "form-label" })
                    <select asp-for="DefaultImage" class="form-select" id="defaultImageSelect">
                        <option disabled selected value="@(SelectDefault.Nenhum)">@(SelectDefault.Nenhum.ToString())</option>
                        @{
                            foreach (var image in Model.ItemImageList)
                            {
                                if (image.Main)
                                {
                                    <option selected="selected" value="@(image.FileName)">@(image.FileName)</option>
                                    ;
                                }
                                else
                                {
                                    <option value="@(image.FileName)">@(image.FileName)</option>
                                }
                            }
                        }
                    </select>
                </div>

                <div class="mb-3 text-start">
                    @Html.LabelFor(model => model.ImageFiles, new { @class = "form-label" })
                    @Html.EditorFor(model => model.ImageFiles, new { htmlAttributes = new { id = "upload", @class = "form-control", placeholder = "", type = "file", accept = "image/*" } })
                    @Html.ValidationMessageFor(model => model.ImageFiles, "", new { @class = "text-danger" })
                </div>

                <div class="row g-3" id="images__client">
                    @foreach (var image in Model.ItemImageList)
                    {
                        <span class="col-6 col-md-4">
                            @*If changed, remember to change the creation of the span in uploadImageUtils.js*@

                            <a onclick="deleteItemImage(@image.ItemImageId)" aria-label="Close" class="close
                            position-absolute
                            d-block
                            translate-middle
                            badge badge-danger
                            border 
                            rounded-circle
                            bg-danger
                            p-2
                            opacity-75">

                                <span aria-hidden="true">&times;</span>
                            </a>

                            <img id="@(image.ItemImageId)" name="@(image.FileName)" src="data:image/*;base64,@(Convert.ToBase64String(image.ImageFile))"
                                 alt="@(image.FileName)" width="@(Constants.MaxImageWidth)" height="@(Constants.MaxImageHeight)"/>
                        </span>
                    }
                </div>

                <hr class="my-4">

                <div id="submit" class="text-end mb-4">
                    <button class="btn btn-primary btn-lg" type="submit">Salvar</button>
                    <a class="btn btn-secondary btn-lg" asp-action="index">Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>
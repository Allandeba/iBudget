@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<PersonModel>

@{
    ViewData["Title"] = "Pessoas";
}

<section class="text-center">
    <div class="container">
        <div class="py-lg-2">
            <h1>Pessoas</h1>
            <p class="lead text-muted">Para mais informações, selecione uma pessoa abaixo.</p>
        </div>

        <div class="row justify-content-md-end">
            <div class="col-lg-6 col-md-8 mt-4 mt-md-0">
                <button class="btn btn-primary" onclick="location.href='@Url.Action("Create")'">Novo</button>
            </div>
        </div>
    </div>
</section>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8">

            @await Html.PartialAsync("../Shared/Partials/Helpers/_SearchBox", new SearchBoxItem { Action = "Search", ControllerName = "Person", SearchValue = (string)TempData[@Constants.SearchBoxData] } )

            <div class="list-group">
                @foreach (var person in Model)
                {
                    <div class="list-group-item list-group-item-action d-flex gap-3 py-2 mb-2">
                        <a asp-controller="Person" asp-action="Delete" asp-route-id="@person.PersonId" class="close position-absolute top-0 start-0 translate-middle badge rounded-circle bg-danger p-2 opacity-75" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </a>
                        <a asp-controller="Person" asp-action="Update" asp-route-id="@person.PersonId" class="d-flex align-items-center w-100">
                            <object class="svg svg-person" alt="user icon" width="32" height="32" class="rounded-circle flex-shrink-0"></object>
                            <div class="flex-grow-1 ms-3">
                                <h6 class="mb-0">@person.PersonName</h6>
                            </div>
                            <div class="d-flex flex-column align-items-end">
                                <span class="text-muted">Registrado</span>
                                <small class="opacity-50 text-nowrap">@person.CreationDate.ToString("dd/MM/yyyy")</small>
                            </div>
                        </a>
                    </div>
                }
            </div>

            @Html.PagedListPager(Model, pageNumber => Url.Action("Search", new { pageNumber, search = TempData[@Constants.SearchBoxData] }), new PagedListRenderOptions
            {
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 5,
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
                ContainerDivClasses = new[] { "d-flex justify-content-end mt-2" }
            })
        </div>
    </div>
</div>
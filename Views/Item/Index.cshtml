@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model IPagedList<ItemModel>

@{
    ViewData["Title"] = "Itens";
}

@await Html.PartialAsync("../Shared/Partials/Helpers/_RegisterHeader", new RegisterHeaderItem { Title = "Itens", Description = "Para mais informações, selecione um item abaixo.", Action = "Create" } )

<div class="container">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8">

            @await Html.PartialAsync("../Shared/Partials/Helpers/_SearchBox", new SearchBoxItem { Action = "Search", ControllerName = "Item", SearchValue = (string)TempData[@Constants.SearchBoxData] } )
            
            <div class="list-group">
                @foreach (var item in Model)
                {
                    <div class="list-group-item list-group-item-action d-flex gap-3 py-2 mb-2">
                        <a asp-controller="Item" asp-action="Delete" asp-route-id="@item.ItemId"
                            class="close position-absolute top-0 start-0 translate-middle badge rounded-circle bg-danger p-2 opacity-75"
                            aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </a>

                        <a asp-controller="Item" asp-action="Update" asp-route-id="@item.ItemId" class="d-flex align-items-center w-100">
                            <object class="svg svg-item" alt="user icon" width="32" height="32" class="rounded-circle flex-shrink-0"></object>

                            <div class="flex-grow-1 ms-3">
                                <h6 class="mb-0">@item.ItemName</h6>
                                <p class="mb-0 opacity-75">@item.Description</p>
                            </div>
                        </a>
                    </div>
                }
            </div>


            @Html.PagedListPager(Model, pageNumber => Url.Action("Search", new { pageNumber, search = TempData[@Constants.SearchBoxData] }), 
                new PagedListRenderOptions {
                    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                    DisplayLinkToLastPage = PagedListDisplayMode.Never,
                    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                    DisplayLinkToNextPage = PagedListDisplayMode.Always,
                    MaximumPageNumbersToDisplay = 5,
                    LiElementClasses = new string[] { "page-item" }, 
                        PageClasses = new string[] { "page-link" },
                    ContainerDivClasses = new string[] { "d-flex justify-content-end mt-2" }
                })
        </div>
    </div>
</div>